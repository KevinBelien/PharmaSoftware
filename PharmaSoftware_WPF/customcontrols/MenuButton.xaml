<UserControl x:Class="PharmaSoftware_WPF.customcontrols.MenuButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PharmaSoftware_WPF.customcontrols"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" x:Name="this">
    <UserControl.Resources>

        <Style x:Key="MenuTextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Nunito"/>
            <Setter Property="Margin" Value="10,0,0,0"/>

            <!--#region Menu Text Style (hover and focus)-->
            <Style.Triggers>
                <DataTrigger Binding= "{Binding IsMouseOver, 
                    RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}"
                    Value="True">
                    <Setter Property="Foreground" Value="#2E75B2"/>
                </DataTrigger>

                <DataTrigger Binding= "{Binding IsChecked, 
                    RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}"
                    Value="True">
                    <Setter Property="Foreground" Value="#2E75B2"/>
                </DataTrigger>
            </Style.Triggers>
            <!--#endregion-->
        </Style>

        <Style x:Key="MenuButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Height" Value="48"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{Binding Padding, ElementName=this}">
                            <Grid>
                                <!--2 kolommen voor icoon en text-->
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <materialDesign:PackIcon Kind="{Binding Icon, ElementName=this, FallbackValue=''}"  HorizontalAlignment="Center"
                                      Height="28" Width="28" Foreground="#2E75B2"
                                      VerticalAlignment="Center"/>

                                <TextBlock VerticalAlignment="Center" Style="{StaticResource MenuTextStyle}" Text="{Binding Text, ElementName=this,  FallbackValue=''}" Grid.Column="1"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected, ElementName=this}" Value="True">
                                <Setter Property="IsChecked" Value="True"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <RadioButton Style="{StaticResource MenuButtonStyle}" GroupName="{Binding GroupName, ElementName=this}" 
                  Command="{Binding SomeCommand, ElementName=this}"
                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"></RadioButton>
</UserControl>
